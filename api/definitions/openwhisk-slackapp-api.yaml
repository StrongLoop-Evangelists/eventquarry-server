swagger: '2.0'
info:
  x-ibm-name: openwhisk-slackapp-api
  version: 1.0.0
  title: openwhisk-slackapp-api
schemes:
  - https
host: $(catalog.host)
basePath: /api
consumes:
  - application/json
  - application/x-www-form-urlencoded
produces:
  - application/json
securityDefinitions: {}
security: []
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  catalogs:
    apic-dev:
      properties:
        runtime-url: $(TARGET_URL)
    sb:
      properties:
        runtime-url: 'http://localhost:4001'
  assembly:
    execute:
      - operation-switch:
          title: operation-switch
          case:
            - operations:
                - verb: get
                  path: /slack/oauth
              execute:
                - invoke:
                    title: app-install
                    timeout: 60
                    verb: GET
                    cache-response: protocol
                    cache-ttl: 900
                    target-url: >-
                      https://slack.com/api/oauth.access?client_id=$(slackClientId)&client_secret=$(slackClientSecret)&code=$(request.parameters.code)&state=$(request.parameters.state)
                - gatewayscript:
                    title: set-registration
                    source: >
                      apim.setvariable("message.body", { "registration":
                      apim.getvariable("message.body") });
                - invoke:
                    title: register-app
                    timeout: 60
                    verb: POST
                    cache-response: protocol
                    cache-ttl: 900
                    username: $(openwhiskUsername)
                    password: $(openwhiskPassword)
                    target-url: >-
                      https://openwhisk.ng.bluemix.net/api/v1/namespaces/_/actions/slackapp-register?blocking=true
                - gatewayscript:
                    title: set-response
                    source: |-
                      var registrationBody = apim.getvariable("message.body");

                      apim.setvariable("message.body", {
                          status: apim.getvariable("message.status.code"),
                          reason: apim.getvariable("message.status.reason"),
                          registration: {
                              activationId: registrationBody.activationId,
                              success: registrationBody.response.success,
                              status: registrationBody.response.status,
                          }
                      });
            - operations:
                - verb: post
                  path: /slack/event
              execute:
                - switch:
                    title: switch
                    case:
                      - condition: apim.getvariable("message.body").challenge
                        execute:
                          - gatewayscript:
                              title: challenge
                              source: |-
                                apim.setvariable("message.body",
                                    apim.getvariable("message").body.challenge);
                      - condition: >-
                          apim.getvariable("message.body").event.type ===
                          "message" &&
                          apim.getvariable("message.body").event.subtype ===
                          "bot_message"
                        execute:
                          - gatewayscript:
                              title: ignore myself
                              source: >-
                                apim.setvariable("message.body", { "status":
                                "OK" });
                      - condition: >-
                          apim.getvariable("message.body").token ==
                          apim.getvariable("api.properties.slackVerificationToken")
                        execute:
                          - gatewayscript:
                              title: set-event
                              source: >
                                apim.setvariable("message.body", { "event":
                                apim.getvariable("message.body") });
                          - invoke:
                              title: process-event
                              timeout: 60
                              verb: POST
                              cache-response: protocol
                              cache-ttl: 900
                              target-url: >-
                                https://openwhisk.ng.bluemix.net/api/v1/namespaces/_/actions/slackapp-event
                              username: $(openwhiskUsername)
                              password: $(openwhiskPassword)
                          - gatewayscript:
                              title: event received
                              source: 'apim.setvariable("message.body", "OK");'
                      - otherwise:
                          - gatewayscript:
                              title: unknown event
                              source: >-
                                apim.setvariable("message.body", { "status":
                                "Unknown event!" });
            - operations:
                - verb: post
                  path: /slack/command
              execute:
                - gatewayscript:
                    title: form-to-json
                    source: >-
                      // for application/x-www-form-urlencoded we need to decode
                      the form body 

                      var requestBody = apim.getvariable("request.body");

                      var blob = requestBody.item(0);

                      var bodyAsString = blob.toBuffer().toString();


                      // this will be the message.body we will set

                      var formDataAsJSON = {};

                      var keyValues = bodyAsString.split("&");

                      for (var index = 0, length = keyValues.length; index <
                      length; index++) {
                          var property = keyValues[index].split("=");
                          formDataAsJSON[property[0]] = decodeURIComponent(property[1].replace("+", "%20"));
                      }


                      apim.setvariable("message.headers.Content-Type",
                      "application/json");

                      apim.setvariable("message.body", formDataAsJSON);
                - if:
                    title: check-token
                    condition: >-
                      apim.getvariable("message.body").token ==
                      apim.getvariable("api.properties.slackVerificationToken")
                    execute: []
                - gatewayscript:
                    title: set-command
                    source: >-
                      apim.setvariable("message.body", { "command":
                      apim.getvariable("message.body") });
                - invoke:
                    title: process-command
                    timeout: 60
                    verb: POST
                    cache-response: protocol
                    cache-ttl: 900
                    target-url: >-
                      https://openwhisk.ng.bluemix.net/api/v1/namespaces/_/actions/slackapp-command
                    username: $(openwhiskUsername)
                    password: $(openwhiskPassword)
                - gatewayscript:
                    title: event received
                    source: >-
                      // our response to the command will be asynchronous.
                      Instead of an empty string we could show a temp text to
                      the user

                      apim.setvariable("message.body", "");

            - operations:
                - verb: post
                  path: /slack/command/q
              execute:
                - gatewayscript:
                    title: form-to-json
                    source: >-
                      // for application/x-www-form-urlencoded we need to decode
                      the form body 

                      var requestBody = apim.getvariable("request.body");

                      var blob = requestBody.item(0);

                      var bodyAsString = blob.toBuffer().toString();


                      // this will be the message.body we will set

                      var formDataAsJSON = {};

                      var keyValues = bodyAsString.split("&");

                      for (var index = 0, length = keyValues.length; index <
                      length; index++) {
                          var property = keyValues[index].split("=");
                          formDataAsJSON[property[0]] = decodeURIComponent(property[1].replace("+", "%20"));
                      }


                      apim.setvariable("message.headers.Content-Type",
                      "application/json");

                      apim.setvariable("message.body", formDataAsJSON);
                - if:
                    title: check-token
                    condition: >-
                      apim.getvariable("message.body").token ==
                      apim.getvariable("api.properties.slackVerificationToken")
                    execute: []
                - gatewayscript:
                    title: set-command-q
                    source: >-
                      apim.setvariable("message.body", { "command":
                      apim.getvariable("message.body") });
                - invoke:
                    title: process-command-q
                    timeout: 60
                    verb: POST
                    cache-response: protocol
                    cache-ttl: 900
                    target-url: >-
                      https://openwhisk.ng.bluemix.net/api/v1/namespaces/_/actions/slackapp-command-q
                    username: $(openwhiskUsername)
                    password: $(openwhiskPassword)
                - gatewayscript:
                    title: event received
                    source: >-
                      // our response to the command will be asynchronous.
                      Instead of an empty string we could show a temp text to
                      the user

                      apim.setvariable("message.body", "");

          otherwise: []
    catch: []
  gateway: datapower-gateway
  properties:
    openwhiskUsername:
      value: USERNAME
      description: >-
        Your OpenWhisk username. It can be obtained by looking at the output of
        "wsk property get --auth". It is the part before the semi-colon.
      encoded: false
    openwhiskPassword:
      value: PASSWORD
      description: >-
        Your OpenWhisk password. It can be obtained by looking at the output of
        "wsk property get --auth". It is the part after the semi-colon.
      encoded: false
    slackClientId:
      value: CLIENT ID
      description: It can be retrieved in the app page in Slack under App Credentials.
      encoded: false
    slackClientSecret:
      value: CLIENT SECRET
      description: It can be retrieved in the app page in Slack under App Credentials.
      encoded: false
    slackVerificationToken:
      value: TOKEN
      description: It can be retrieved in the app page in Slack under App Credentials.
      encoded: false
paths:
  /slack/command:
    post:
      responses:
        '200':
          description: 200 OK
  /slack/event:
    post:
      responses:
        '200':
          description: 200 OK
  /slack/oauth:
    get:
      responses:
        '200':
          description: 200 OK
definitions: {}
